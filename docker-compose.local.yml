version: "3.4"

services:
  proxy:
    image: nginxproxy/nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "1337:80"
  worker-gui:
    deploy:
      replicas: 0
    image: django-ecs
    environment:
      - POSTGRES_HOST=172.17.0.1
      - REDIS_HOST=172.17.0.1
      - DEBUG=True
    env_file:
      - .env
    ports:
      - "5555:5555"
    entrypoint: celery
    command: -A app flower --basic_auth=john:v4r14bl3 --loglevel=INFO
    healthcheck:
      test: [ "CMD-SHELL", "curl -u john:v4r14bl3 -f http://localhost:5555 || exit 1" ]
      interval: 1m30s
      timeout: 30s
      retries: 10
      start_period: 40s
    restart: on-failure
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - "postgres-vol:/var/lib/postgresql/data"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --quiet || exit 1"]
      interval: 1m
      timeout: 30s
      retries: 10
      start_period: 40s
    restart: unless-stopped
  postgres-gui:
    deploy:
      replicas: 0
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=michael.feher@algorand.foundation
      - PGADMIN_DEFAULT_PASSWORD=secure_password
      - PGADMIN_SERVER_JSON_FILE=/opt/pg-admin.json
    ports:
      - "8082:80"
    volumes:
      - "./.docker/pg-admin.json:/opt/pg-admin.json"
  redis:
    image: redis
    volumes:
      - "redis-vol:/data"
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG || exit 1"]
      interval: 1m
      timeout: 30s
      retries: 10
      start_period: 40s
    restart: unless-stopped
  redis-gui:
    deploy:
      replicas: 1
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "9000:8081"
volumes:
  postgres-vol:
  redis-vol:
